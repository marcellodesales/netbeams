/* DO NOT EDIT THIS FILE - it is machine generated */

#include <jni.h>

#ifndef __gnu_io_RS485__
#define __gnu_io_RS485__

#ifdef __cplusplus
extern "C"
{
#endif

JNIEXPORT void JNICALL Java_gnu_io_RS485_Initialize (JNIEnv *env, jclass);
JNIEXPORT jint JNICALL Java_gnu_io_RS485_open (JNIEnv *env, jobject, jstring);
JNIEXPORT void JNICALL Java_gnu_io_RS485_nativeSetRS485PortParams (JNIEnv *env, jobject, jint, jint, jint, jint);
JNIEXPORT void JNICALL Java_gnu_io_RS485_setflowcontrol (JNIEnv *env, jobject, jint);
JNIEXPORT jint JNICALL Java_gnu_io_RS485_NativegetReceiveTimeout (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RS485_NativeisReceiveTimeoutEnabled (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RS485_NativeEnableReceiveTimeoutThreshold (JNIEnv *env, jobject, jint, jint, jint);
JNIEXPORT jboolean JNICALL Java_gnu_io_RS485_isDTR (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RS485_setDTR (JNIEnv *env, jobject, jboolean);
JNIEXPORT void JNICALL Java_gnu_io_RS485_setRTS (JNIEnv *env, jobject, jboolean);
JNIEXPORT void JNICALL Java_gnu_io_RS485_setDSR (JNIEnv *env, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_gnu_io_RS485_isCTS (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RS485_isDSR (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RS485_isCD (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RS485_isRI (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RS485_isRTS (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RS485_sendBreak (JNIEnv *env, jobject, jint);
JNIEXPORT void JNICALL Java_gnu_io_RS485_writeByte (JNIEnv *env, jobject, jint);
JNIEXPORT void JNICALL Java_gnu_io_RS485_writeArray (JNIEnv *env, jobject, jbyteArray, jint, jint);
JNIEXPORT void JNICALL Java_gnu_io_RS485_drain (JNIEnv *env, jobject);
JNIEXPORT jint JNICALL Java_gnu_io_RS485_nativeavailable (JNIEnv *env, jobject);
JNIEXPORT jint JNICALL Java_gnu_io_RS485_readByte (JNIEnv *env, jobject);
JNIEXPORT jint JNICALL Java_gnu_io_RS485_readArray (JNIEnv *env, jobject, jbyteArray, jint, jint);
JNIEXPORT void JNICALL Java_gnu_io_RS485_eventLoop (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RS485_nativeClose (JNIEnv *env, jobject);

#ifdef __cplusplus
}
#endif

#endif /* __gnu_io_RS485__ */
