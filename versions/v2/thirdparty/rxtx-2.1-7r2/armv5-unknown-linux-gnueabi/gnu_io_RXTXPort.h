/* DO NOT EDIT THIS FILE - it is machine generated */

#include <jni.h>

#ifndef __gnu_io_RXTXPort__
#define __gnu_io_RXTXPort__

#ifdef __cplusplus
extern "C"
{
#endif

JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_Initialize (JNIEnv *env, jclass);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_open (JNIEnv *env, jobject, jstring);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeGetParity (JNIEnv *env, jobject, jint);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeGetFlowControlMode (JNIEnv *env, jobject, jint);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetSerialPortParams (JNIEnv *env, jobject, jint, jint, jint, jint);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_setflowcontrol (JNIEnv *env, jobject, jint);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_NativegetReceiveTimeout (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_NativeisReceiveTimeoutEnabled (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_NativeEnableReceiveTimeoutThreshold (JNIEnv *env, jobject, jint, jint, jint);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_isDTR (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_setDTR (JNIEnv *env, jobject, jboolean);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_setRTS (JNIEnv *env, jobject, jboolean);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_setDSR (JNIEnv *env, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_isCTS (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_isDSR (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_isCD (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_isRI (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_isRTS (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_sendBreak (JNIEnv *env, jobject, jint);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_writeByte (JNIEnv *env, jobject, jint, jboolean);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_writeArray (JNIEnv *env, jobject, jbyteArray, jint, jint, jboolean);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeDrain (JNIEnv *env, jobject, jboolean);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeavailable (JNIEnv *env, jobject);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_readByte (JNIEnv *env, jobject);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_readArray (JNIEnv *env, jobject, jbyteArray, jint, jint);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_readTerminatedArray (JNIEnv *env, jobject, jbyteArray, jint, jint, jbyteArray);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_eventLoop (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_interruptEventLoop (JNIEnv *env, jobject);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_nativeSetEventFlag (JNIEnv *env, jobject, jint, jint, jboolean);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_nativeClose (JNIEnv *env, jobject, jstring);
JNIEXPORT void JNICALL Java_gnu_io_RXTXPort_nativeStaticSetSerialPortParams (JNIEnv *env, jclass, jstring, jint, jint, jint, jint);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticSetDSR (JNIEnv *env, jclass, jstring, jboolean);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticSetDTR (JNIEnv *env, jclass, jstring, jboolean);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticSetRTS (JNIEnv *env, jclass, jstring, jboolean);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticIsDSR (JNIEnv *env, jclass, jstring);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticIsDTR (JNIEnv *env, jclass, jstring);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticIsRTS (JNIEnv *env, jclass, jstring);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticIsCTS (JNIEnv *env, jclass, jstring);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticIsCD (JNIEnv *env, jclass, jstring);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeStaticIsRI (JNIEnv *env, jclass, jstring);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeStaticGetBaudRate (JNIEnv *env, jclass, jstring);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeStaticGetDataBits (JNIEnv *env, jclass, jstring);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeStaticGetParity (JNIEnv *env, jclass, jstring);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeStaticGetStopBits (JNIEnv *env, jclass, jstring);
JNIEXPORT jbyte JNICALL Java_gnu_io_RXTXPort_nativeGetParityErrorChar (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetParityErrorChar (JNIEnv *env, jobject, jbyte);
JNIEXPORT jbyte JNICALL Java_gnu_io_RXTXPort_nativeGetEndOfInputChar (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetEndOfInputChar (JNIEnv *env, jobject, jbyte);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetUartType (JNIEnv *env, jobject, jstring, jboolean);
JNIEXPORT jstring JNICALL Java_gnu_io_RXTXPort_nativeGetUartType (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetBaudBase (JNIEnv *env, jobject, jint);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeGetBaudBase (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetDivisor (JNIEnv *env, jobject, jint);
JNIEXPORT jint JNICALL Java_gnu_io_RXTXPort_nativeGetDivisor (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetLowLatency (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeGetLowLatency (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeSetCallOutHangup (JNIEnv *env, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeGetCallOutHangup (JNIEnv *env, jobject);
JNIEXPORT jboolean JNICALL Java_gnu_io_RXTXPort_nativeClearCommInput (JNIEnv *env, jobject);

#undef gnu_io_RXTXPort_debug
#define gnu_io_RXTXPort_debug 0L
#undef gnu_io_RXTXPort_debug_read
#define gnu_io_RXTXPort_debug_read 0L
#undef gnu_io_RXTXPort_debug_read_results
#define gnu_io_RXTXPort_debug_read_results 0L
#undef gnu_io_RXTXPort_debug_write
#define gnu_io_RXTXPort_debug_write 0L
#undef gnu_io_RXTXPort_debug_events
#define gnu_io_RXTXPort_debug_events 0L
#undef gnu_io_RXTXPort_debug_verbose
#define gnu_io_RXTXPort_debug_verbose 0L

#ifdef __cplusplus
}
#endif

#endif /* __gnu_io_RXTXPort__ */
